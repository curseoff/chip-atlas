!!! 5
%html{ :lang => "en" }
  %head
    %meta{ :charset => "utf-8" }
    %meta{ "http-equiv" => "X-UA-Compatible", :content => "IE=edge" }
    %meta{ :name => "viewport", :content => "width=device-width, initial-scale=1" }

    %meta{ :name => "description", :content => "A web interface to support browsing public ChIP-Seq data via IGV." }
    %meta{ :name => "author", :content => "Shinya Oki, Tazro Ohta" }

    %title= "ChIP-Atlas"

    // Bootstrap core and typeahead CSS
    %link{ :href => "#{app_root}/css/bootstrap.min.css", :rel => "stylesheet" }
    %link{ :href => "#{app_root}/css/typeaheadjs.css", :rel => "stylesheet" }

    // Custom style for this website
    %link{ :href => "#{app_root}/style.css", :rel => "stylesheet"}

  %body
    %nav.navbar.navbar-inverse.navbar-fixed-top
      .container
        .navbar-header
          %button.navbar-toggle.collapsed{ :type => "button", "data-toggle" => "collapse", "data-target" => "#navbar", "aria-expanded" => "false", "aria-controls" => "navbar" }
            %span.sr-only Toggle navigation
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          %a.navbar-brand{ :href => "#{app_root}" }= "ChIP-Atlas"
        #navbar.collapse.navbar-collapse
          %ul.nav.navbar-nav
            %li
              %a{ :href => "#{app_root}" }= "Raw Peak Data"
            %li
              %a{ :href => "#{app_root}/colo" }= "Co-Association Analysis"
            %li.active
              %a{ :href => "#{app_root}/target_gene" }= "Target Gene Analysis"
            %li
              %a{ :href => "#{app_root}/About" }= "About"

    .container
      .header
        %h1= "ChIP-Atlas - Target Gene Analysis"
        %p= "Visualize All Peaks from Published ChIP-Seq data."

      // Navigation Tabs, links and contents
      .genomeTab{ :role => "tabpanel"}

        // Tabs
        %ul.nav.nav-tabs{ :role => "tablist" }
          - @list_of_genome.each.with_index do |genome, i|
            %li{ :role => "presentation", :class => "#{(i == 0) ? 'active' : '' }" }
              %a{ :href => "##{genome}", "aria-controls" => genome, :role => "tab", "data-toggle" => "tab" }
                = "#{genome}"

        // Contents
        .tab-content
          - @list_of_genome.each.with_index do |genome, i|
            .tab-pane.fade{ :role => "tabpanel", :id => genome, :class => "#{(i == 0) ? 'in active' : ''}" }
              %row
                .col-md-3
                  .panel.panel-default
                    .panel-heading{ :id => "" }
                      %h4.panel-title= "1. Choose Genome"
                    .panel-body
                      %form{ :id => "" }
                        .radio
                          %label
                            %input{ :type => "radio", :id => "", :value => "hg19", :name => "genome_option" }
                            = "hg19"
                        .radio
                          %label
                            %input{ :type => "radio", :id => "", :value => "mm9", :name => "genome_option" }
                            = "mm9"
                        .radio
                          %label
                            %input{ :type => "radio", :id => "", :value => "dm3", :name => "genome_option" }
                            = "dm3"
                        .radio
                          %label
                            %input{ :type => "radio", :id => "", :value => "ce10", :name => "genome_option" }
                            = "ce10"
                        .radio
                          %label
                            %input{ :type => "radio", :id => "", :value => "sacCer3", :name => "genome_option" }
                            = "sacCer3"

                .col-md-3
                  .panel.panel-default
                    .panel-heading{ :id => "" }
                      %h4.panel-title= "2. Choose Starting Type"
                    .panel-body
                      %form{ :id => "" }
                        .radio
                          %label
                            %input{ :type => "radio", :id => "", :value => "ag", :name => "datatypeoption" }
                            = " Antigens "
                        .radio
                          %label
                            %input{ :type => "radio", :id => "", :value => "cl", :name => "datatypeoption" }
                            = " Cell Types "
                .col-md-3
                  .panel.panel-default
                    .panel-heading{ :id => "" }
                      %h4.panel-title= "3. Choose Primary Type"
                    .panel-body
                      %input.typeahead.form-control{ :type => "text", :placeholder => "type to search", :id => "" }
                      %hr
                      %select.form-control.flexselect{ :id => "", :size => 8 }

                .col-md-3
                  .panel.panel-default
                    .panel-heading{ :id => "" }
                      %h4.panel-title= "4. Choose Secondary Type"
                    .panel-body
                      %input.typeahead.form-control{ :type => "text", :placeholder => "type to search", :id => "" }
                      %hr
                      %select.form-control.flexselect{ :id => "", :size => 8 }

              %row
                .col-md-3.col-md-offset-9
                  .button-submit
                    %button.btn.btn-primary.btn-lg.btn-block{ :id => "submit-target", :type => "button" }= "View Potential Target Genes"

    /
      Bootstrap Core Javascript
      =========================
    %link{ :href => "#{app_root}/css/flexselect.css", :rel => "stylesheet", :type => "text/css", :media => "screen" }
    %script{ :src => "#{app_root}/js/jquery.min.js" }
    %script{ :src => "#{app_root}/js/bootstrap.min.js" }
    %script{ :src => "#{app_root}/js/ie10-viewport-bug-workaround.js" }
    %script{ :src => "#{app_root}/js/liquidmetal.js" }
    %script{ :src => "#{app_root}/js/jquery.flexselect.js" }
    %script{ :src => "#{app_root}/js/typeahead.bundle.js" }

    / 'code here'

    :javascript
      // retrieve index
      var indexAll = JSON.parse('#{JSON.dump(@index_all_genome)}');

      // iterate for each genomes
      $.each(#{@list_of_genome}, function(i, genome){
        // set tab controller
        $('#' + genome + ' a').click(function(e){
          e.preventDefault();
          $(this).tab('show')
        })

        // collapse controller
        $.each(["ag", "cl"], function(i, type){
          $('#toggle-' + genome + type + 'SubClass').click(function(){
            $('#collapse-' + genome + type + 'SubClass').collapse('toggle');
          });
        });

        // for each subclass section
        $.each([["antigen", "ag"], ["celltype", "cl"]], function(it, type){
          $('select#' + genome + type[1] + 'Class').change(function(){
            // Common variables
            var genomeSelected = $('.genomeTab ul li.active a').text().replace(/[\n\s ]/g, "");
            var valueSelected  = $('select#' + genomeSelected + type[1] + 'Class option:selected').val();
            var subClassObj    = indexAll[genomeSelected][type[0]][valueSelected];

            // Erase previous options
            $('select#' + genomeSelected + type[1] + 'SubClass').empty();

            // Generate an option for All
            $("<option>")
              .attr("value", "-")
              .attr("selected", "true")
              .append("All")
              .appendTo('select#' + genomeSelected + type[1] + 'SubClass');

            // Generate options from subClassObj
            $.map(subClassObj, function(value, key){
              return [[key, value]];
            }).sort().forEach(function(element, index, array){
              var k = element[0];
              var v = element[1];
              $('<option>')
                .attr("value", k)
                .append(k + " (" + v + ")")
                .appendTo('select#' + genomeSelected + type[1] + 'SubClass');
            });

            // activate typeahead
            var typeaheadInput = $('#' + genomeSelected + type[1] + 'SubClass.typeahead');
            var subClassList = $.map(subClassObj, function(value, key){
                  return key;
                });

            // Erase previous data set
            typeaheadInput.typeahead('destroy');

            var list = new Bloodhound({
              datumTokenizer: Bloodhound.tokenizers.whitespace,
              queryTokenizer: Bloodhound.tokenizers.whitespace,
              local: subClassList
            });

            typeaheadInput.typeahead({
              hint: true,
              highlight: true,
              minLength: 1
            },{
              name: 'list',
              source: list
            });

            // sync textbox and input field
            typeaheadInput.keyup(function(){
              var input = $(this).val();
              if($.inArray(input,subClassList) > -1){
                $('select#' + genomeSelected + type[1] + 'SubClass').val(input);
              }
            });
            typeaheadInput.on('typeahead:select', function(){
              var input = $(this).val();
              if($.inArray(input,subClassList) > -1){
                $('select#' + genomeSelected + type[1] + 'SubClass').val(input);
              }
            });
          });
        })

        // hide another subclass when one subclass is selected
        var twoSelectors = ['select#' + genome + 'agSubClass', 'select#' + genome + 'clSubClass'];
        $.each(twoSelectors, function(i, selector){
          $(selector).change(function(){
            if($(twoSelectors[0]).val() != "-" && $(twoSelectors[1]).val() != "-"){

              // build alert message object
              var span = $('<span>').attr("aria-hidden","true").append("Ã—")

              var button = $('<button>').attr("type","button").attr("class","close")
                    .attr("data-dismiss","alert").attr("aria-label","Close").append(span);

              var message = $('<div>').attr("class","alert alert-warning alert-dismissible fade in")
                    .attr("role","alert").append(button)
                    .append('Select one SubClass disables another').append('</div>');

              switch($(this).attr("id").replace(genome,"").replace("SubClass","")){
                case "ag":
                  $('select#' + genome + 'clSubClass').val("-");
                  if($('.panel-message#' + genome + 'agSubClass').is(':empty')){
                    $('.panel-message#' + genome + 'agSubClass').append(message);
                  }
                  break;

                case "cl":
                  $('select#' + genome + 'agSubClass').val("-");
                  if($('.panel-message#' + genome + 'clSubClass').is(':empty')){
                    $('.panel-message#' + genome + 'clSubClass').append(message);
                  }
                  break;
              };
            };
          });
        });
      });

      // tab trigger event
      $('a[data-toggle="tab"]').on('shown.bs.tab', function(e){
        var activatedTab = e.target;
        var previousTab = e.relatedTarget;
        var genome = $('.genomeTab ul li.active a').text().replace(/[\n\s ]/g, "");
        $.each(["ag","cl"], function(i, value){
          $('select#' + genome + value + 'SubClass').empty();
        })
      });

      // send data to get igv url
      $(function(){
        $("button#submit").click(function(){
          var button = $(this);
          button.attr("disabled", true);

          var genome = $('.genomeTab ul li.active a').text().replace(/[\n\s ]/g, "");
          var data = {
            // igv: $().text
            condition: {
              genome: genome,
              agClass: $('#' + genome + 'agClass option:selected').val(),
              agSubClass: $('#' + genome + 'agSubClass option:selected').val(),
              clClass: $('#' + genome + 'clClass option:selected').val(),
              clSubClass: $('#' + genome + 'clSubClass option:selected').val(),
              qval: $('#' + genome + 'qval option:selected').val()
            }
          };

          alert(JSON.stringify(data));

          $.ajax({
            type : 'post',
            url : "#{app_root}/browse",
            data: JSON.stringify(data),
            contentType: 'application/json',
            dataType: 'json',
            scriptCharset: 'utf-8',
            success : function(response) {
              alert(JSON.stringify(response));
              window.open(response.url, "_self", "")
            },
            error : function(response){
              alert(JSON.stringify(response));
              alert("error!");
            },
            complete: function(){
              button.attr("disabled", false);
            }
          });
        })
      })
