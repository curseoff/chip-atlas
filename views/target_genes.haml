!!! 5
%html{ :lang => "en" }
  %head
    %meta{ :charset => "utf-8" }
    %meta{ "http-equiv" => "X-UA-Compatible", :content => "IE=edge" }
    %meta{ :name => "viewport", :content => "width=device-width, initial-scale=1" }

    %meta{ :name => "description", :content => "A web interface to support browsing public ChIP-Seq data via IGV." }
    %meta{ :name => "author", :content => "Shinya Oki, Tazro Ohta" }

    %title= "ChIP-Atlas"

    // Bootstrap core and typeahead CSS
    %link{ :href => "#{app_root}/css/bootstrap.min.css", :rel => "stylesheet" }
    %link{ :href => "#{app_root}/css/typeaheadjs.css", :rel => "stylesheet" }

    // Custom style for this website
    %link{ :href => "#{app_root}/style.css", :rel => "stylesheet"}

  %body
    %nav.navbar.navbar-inverse.navbar-fixed-top
      .container
        .navbar-header
          %button.navbar-toggle.collapsed{ :type => "button", "data-toggle" => "collapse", "data-target" => "#navbar", "aria-expanded" => "false", "aria-controls" => "navbar" }
            %span.sr-only Toggle navigation
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          %a.navbar-brand{ :href => "#{app_root}" }= "ChIP-Atlas"
        #navbar.collapse.navbar-collapse
          %ul.nav.navbar-nav
            %li
              %a{ :href => "#{app_root}/peak_browser" }= "Peak Browser"
            %li.active
              %a{ :href => "#{app_root}/target_genes" }= "Target Genes"
            %li
              %a{ :href => "#{app_root}/colo" }= "Colocalization"
            %li
              %a{ :href => "#{app_root}/in_silico_chip" }
                %span.italic
                  in silico
                ChIP
            %li
              %a{ :href => "https://github.com/inutano/chip-atlas/wiki" }= "Documentation"
          %ul.nav.navbar-nav.navbar-right
            %li.dropdown
              %a.dropdown-toggle{ "data-toggle" => "dropdown", role: "button", "aria-haspopup" => true, "aria-expanded" => false }
                Jump to Experiment
                %span.caret
              %ul.dropdown-menu{ style: "padding:12px;" }
                %li
                  %form.form-inline
                    .form-group
                      %input.form-control#jumpToExperiment{ type: "text", value: "ERX032305", "aria-describedby" => "exp-help" }
                    %button.btn.btn-default.go-experiment{ type: 'submit' }
                      Go
                    %p.help-block#exp-help
                      Jump to individual experiment result page by SRA Exp ID.

    .container
      .row
        .col-md-10
          .header
            %h1= "ChIP-Atlas - Target Genes"
            %p= "Predict potential target genes of TFs."
        .col-md-2
          .dropdown-help
            .dropdown
              .button.btn.btn-default.dropdown-toggle{ :type => "button", :id => "movies-dropdown", "data-toggle" => "dropdown", "aria-haspopup" => true, "aria-expanded" => true }
                Tutorial movie
                %span.caret
              %ul.dropdown-menu{ "aria-labelledby" => "movies-dropdown" }
                %li
                  %a{ :href => "#" }= "How to use"

      // Navigation Tabs, links and contents
      .genomeTab{ :role => "tabpanel"}

        // Tabs
        %ul.nav.nav-tabs{ :role => "tablist" }
          - @list_of_genome.each.with_index do |genome, i|
            %li{ :role => "presentation", :class => "#{(i == 0) ? 'active' : '' }", :id => "#{genome}-tab" }
              %a{ :href => "##{genome}-tab-content", "aria-controls" => "#{genome}-tab-content", :role => "tab", "data-toggle" => "tab", "source" => genome }
                - genome_sp = { "hg19" => "H. sapiens", "mm9" => "M. musculus", "dm3" => "D. melanogaster", "ce10" => "C. elegans", "sacCer3" => "S. celevisiae"}
                = "#{genome_sp[genome]}"

        // Contents
        .tab-content
          - @list_of_genome.each.with_index do |genome, i|
            .tab-pane.fade{ :role => "tabpanel", :id => "#{genome}-tab-content", :class => "#{(i == 0) ? 'in active' : ''}" }
              .row
                .col-md-3
                  .panel.panel-default
                    - panel = "#{genome}AntigenPanel"
                    .panel-heading{ :id => panel }
                      %h4.panel-title= "1. Choose Antigen"
                    .panel-body
                      %input.typeahead.form-control{ :type => "text", :placeholder => "type to search", :id => "#{panel}-typeahead" }
                      %hr
                      %select.form-control.flexselect{ :id => "#{panel}-select",  :size => 8 }

                .col-md-3
                  .panel.panel-default
                    - panel = "#{genome}DistancePanel"
                    .panel-heading{ :id => panel }
                      %h4.panel-title= "2. Choose Distance from TSS"
                    .panel-body
                      %form{ :id => "#{panel}-form" }
                        .radio
                          %label
                            %input{ :type => "radio", :id => "", :value => "1", :name => genome +  "DistanceOption", checked: true }
                            = " ±1k "
                        .radio
                          %label
                            %input{ :type => "radio", :id => "", :value => "5", :name => genome + "DistanceOption" }
                            = " ±5k "
                        .radio
                          %label
                            %input{ :type => "radio", :id => "", :value => "10", :name => genome +  "DistanceOption" }
                            = " ±10k "

              .row
                .col-md-6.col-md-offset-3
                  .button-submit
                    %button.btn.btn-primary.btn-lg.btn-block.post{ :id => "target-gene-submit", :type => "button" }= "View Potential Target Genes"
                    %button.btn.btn-primary.btn-lg.btn-block.post{ :id => "target-gene-download", :type => "button" }= "Download (TSV)"

    /
      Bootstrap Core Javascript
      =========================
    %link{ :href => "#{app_root}/css/flexselect.css", :rel => "stylesheet", :type => "text/css", :media => "screen" }
    %script{ :src => "#{app_root}/js/jquery.min.js" }
    %script{ :src => "#{app_root}/js/bootstrap.min.js" }
    %script{ :src => "#{app_root}/js/ie10-viewport-bug-workaround.js" }
    %script{ :src => "#{app_root}/js/liquidmetal.js" }
    %script{ :src => "#{app_root}/js/jquery.flexselect.js" }
    %script{ :src => "#{app_root}/js/typeahead.bundle.js" }

    / 'code here'

    :javascript
      $('button.go-experiment').on('click', function(event){
        event.preventDefault();
        var expid = $('input#jumpToExperiment').val();
        window.open('/view?id='+expid);
      });

      // global variables
      var analysis;
      var listOfGenome;

      // onload
      $(function(){
        // retrieve analysis hash
        $.ajax({
          type: 'GET',
          url: '/data/target_genes_analysis.json',
          dataType: 'json',
          success: function(analysisJson){
            analysis = analysisJson;
            setPanel('AntigenPanel', analysis);
            // retrieve list of genomes
            $.ajax({
              type: 'GET',
              url: '/data/list_of_genome.json',
              dataType: 'json',
              success: function(genomeJson){
                listOfGenome = genomeJson;
                $.each(genomeJson, function(i, genome){
                  // activate typeahead
                  var options = analysisJson[genome];
                  enableTypeAhead('AntigenPanel', options)
                  // set tab controller
                  $('#' + genome + '-tab a').click(function(e){
                    e.preventDefault();
                    $(this).tab('show');
                    setPanel('AntigenPanel', analysisJson);
                  })
                })
              }
            });
          }
        });

        // click button to submit data and browse data
        $("button.post").click(function(){
          var button = $(this);
          button.attr("disabled", true);

          var buttonId = $(this).attr("id");
          var suffix;
          switch(buttonId){
            case 'target-gene-submit':
              suffix = 'submit';
              break;
            case 'target-gene-download':
              suffix = 'tsv';
              break;
          };

          $.ajax({
            type : 'post',
            url : "#{app_root}/target_genes?type="+suffix,
            data: JSON.stringify(retrievePostData()),
            contentType: 'application/json',
            dataType: 'json',
            scriptCharset: 'utf-8',
            success : function(response) {
              // alert(JSON.stringify(response));
              window.open(response.url, "_self", "")
            },
            error : function(response){
              // alert(JSON.stringify(response));
              alert("error!");
            },
            complete: function(){
              button.attr("disabled", false);
            }
          });
        })
      });

      // functions
      function genomeSelected(){
        return $('.genomeTab ul li.active a').attr('source').replace(/[\n\s ]/g, "");
      }

      function setPanel(panel, analysis){
        removeCurrentOptions(panel);
        var options = getOptions(panel, analysis);
        appendOptions(panel, options);
        enableTypeAhead(panel, options);
      }

      function removeCurrentOptions(panel){
        // panel = 'PrimaryPanel' or 'SecondaryPanel'
        var genome = genomeSelected();
        var target = $('select#' + genome + panel + '-select');
        target.empty();
      }

      function getOptions(panel, analysis){
        var genome = genomeSelected();
        return analysis[genome];
      }

      function appendOptions(panel, options){
        var genome = genomeSelected();
        var targetSelect = $('select#' + genome + panel + '-select');
        options.sort().forEach(function(element, index, array){
          if(index==0){
            $('<option>')
              .attr("value", element)
              .attr("selected","selected")
              .append(element)
              .appendTo(targetSelect);
          }else{
            $('<option>')
              .attr("value", element)
              .append(element)
              .appendTo(targetSelect);
          };
        });
      }

      function enableTypeAhead(panel, options){
        var genome = genomeSelected();
        var typeaheadInput = $('#' + genome + panel + '-typeahead');
        typeaheadInput.typeahead('destroy');  // Erase previous data set
        var list = new Bloodhound({ // create list for incremental search
          datumTokenizer: Bloodhound.tokenizers.whitespace,
          queryTokenizer: Bloodhound.tokenizers.whitespace,
          local: options
        });
        typeaheadInput.typeahead({ // activate typeahead
          hint: true,
          highlight: true,
          minLength: 1
        },{
          name: 'list',
          source: list
        });
        typeaheadInput.keyup(function(){ // sync textbox and input field
          var input = $(this).val();
          if($.inArray(input,options) > -1){
            $('select#' + genome + panel + '-select').val(input);
          }
        });
        typeaheadInput.on('typeahead:select', function(){
          var input = $(this).val();
          if($.inArray(input,options) > -1){
            $('select#' + genome + panel + '-select').val(input);
          }
        });
      }

      function retrievePostData(){
        var genome = $('.genomeTab ul li.active a').attr('source').replace(/[\n\s ]/g, "");
        var data = {
          // igv: $().text
          condition: {
            genome: genome,
            antigen: $('select#' + genome + 'AntigenPanel-select option:selected').val(),
            distance: $('input[name='+genome+'DistanceOption]:checked').val()
          }
        };
        return data;
      }
